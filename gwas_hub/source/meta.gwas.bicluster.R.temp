# PubMed-Keyword bi-clustering, BUGGY

###################################################################################################
######################################## "Bicluster" tab #############################################
output$bicluster.plot.title<-renderUI({
  rslt<-search.rslt();
  if(identical(NA, rslt)) h3("Biclustering of PubMed-Keyword (waiting for search results ...)") else h2(paste(input$search.options, input$search.value, sep=' = '))
});

output$bicluster.plot <- renderPlot({
  rslt<-search.rslt();
  
  # re-formatting the result table
  # add an column (analysis name)
  if(identical(NA, rslt)) rslt<-NA else if (is.character(rslt$phred)) rslt<-data.frame('Message' = rslt$phred) else {
    rslt<-rslt$phred;
    rslt.up<-rslt[rslt$Phred>=20, ]; # change it with slider
    
    p<-rslt.up$Phred;
    pub<-rslt.up$PubMed;
    key<-pub2key[pub];
    p<-rep(p, sapply(key, length));
    pub<-rep(pub, sapply(key, length));
    key<-unlist(key, use.names=FALSE);
    
    mp<-data.frame(pub,key, p);
    id<-paste(mp[,1], mp[,2], sep='=');
    mx<-sapply(split(p, id), max);
    mtrx<-matrix(data=0, nr=length(unique(mp[,2])), nc=length(unique(mp[,1])), dimnames=list(unique(key), unique(pub)));
    x<-strsplit(names(mx), '=');
    y<-sapply(x, function(x) x[1]);
    z<-sapply(x, function(x) x[2]);
    for (i in 1:length(mx)) mtrx[z[i], y[i]]<-1;
    mp<-mtrx[rowSums(mtrx)>=5, colSums(mtrx)>=5];
    
    library(biclust);
    library(isa2);
    
    module<-isa(mp, direction=c('up', 'up'));
    
    rows<-module$rows;
    cols<-module$columns;
    n1<-apply(rows,2, function(x) length(x[x!=0]));
    n2<-apply(cols,2, function(x) length(x[x!=0]));
    rows<-rows[, n1>1&n2>1, drop=FALSE];
    cols<-cols[, n1>1&n2>1, drop=FALSE];
    if (ncol(rows)==0) bic<-NA else {
      modules<-lapply(1:ncol(rows), function(i) list(rows=which(rows[,i]!=0), cols=which(cols[,i]!=0)));
      names(modules)<-1:length(modules);
      modules<-lapply(modules, function(x) mp[x[[1]], x[[2]], drop=FALSE]);
      ncol<-sapply(modules, ncol);
      nrow<-sapply(modules, nrow);
      mean<-sapply(modules, mean);
      N<-length(mp);
      N1<-length(mp[mp==1]);
      n<-cbind(sapply(modules, length), sapply(modules, function(x) length(x[x==1])));
      p<-apply(n, 1, function(n) prop.test(c(n[2], N1-n[2]), c(n[1], N-n[1]))$p.value[[1]]); 
      rob<-robustness(list(Er=t(mp), Ec=mp), rows, cols);
      
      # write index file
      bic.smm<-data.frame(ID=paste('Bicluster_', 1:length(mean), sep=''), Num_Terms=nrow, Num_Genes=ncol, Robustness=rob, Pct_Present=mean, Enrichment=mean/mean(mp), P_Enrichment=p);
      bic<-list(summary=bic.smm, clusters=modules);
    }
  }
  
  par(mar=c(5,5,2,2), omi=c(0,0,1,3));    
  sz<-bic[[1]][,2]*bic[[1]][,3];
  b<-bic[[2]][sz==max(sz)][[1]];
  rownames(b)<-paste(rownames(b), meta.keyword[rownames(b), 'Name']);
  colnames(b)<-paste(colnames(b), meta.pubmed[colnames(b), 'Title']);
  heatmap(t(b), scale='none', cexCol=0.5, cexRow=0.5, col=c('lightgrey', 'darkgrey'));
  
}, height=600, width=600);
###################################################################################################
